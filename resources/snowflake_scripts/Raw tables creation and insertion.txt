---Raw customers data----
CREATE OR REPLACE TABLE raw_customers(
customer_id INT,                 ---unique id for each customer
customer_name VARCHAR(100),       --- full name 
customer_email VARCHAR(254),      ---- follow email standards
customer_phone VARCHAR(20)        ---- enough for phone formats
);

----Raw orders data-----
CREATE OR REPLACE TABLE raw_orders(
order_id INT,              ---unique identifer for each order
customer_id INT,           ----foreign key to the customer table
order_date DATE,           ---- date the order was placed
order_amount DECIMAL(10, 2)  --------- total amount for orders with 2 decimal places for cents
);


INSERT INTO raw_customers(customer_id,customer_name,customer_email,customer_phone)VALUES
(1,'John Doe','john.doe@example.com','123-456-7890'),
(2,'Jane Smith','jane.smith@example.com','987-654-3210');

INSERT INTO raw_orders(order_id,customer_id,order_date,order_amount)VALUES
(101,1,'2023-01-01',100.00),
(102,2,'2023-01-02',150.00);

----To check data is inserted properly----
select * from raw_customers;
select * from raw_orders;

------ troubleshooting query for unique test on customer_hk column---------
select customer_id, count(*) as cnt
from raw_customers
group by customer_id
having count(*) > 1;

----To view the tables data-------

---raw layer----
select * from dbt_project.raw.raw_customers;
select * from dbt_project.raw.raw_orders;

---staging layer----
select * from dbt_project.dbt_pd_staging.sat_customer;
select * from dbt_project.dbt_pd_staging.link_customer_order;
select * from dbt_project.dbt_pd_staging.hub_customer;

----final dw layer----
select * from dbt_project.dbt_pd_mart.hub;
select * from dbt_project.dbt_pd_mart.link;
select * from dbt_project.dbt_pd_mart.satellite;






